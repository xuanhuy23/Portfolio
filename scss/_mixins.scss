// Mixins SCSS

// Flexbox
@mixin flex($direction: row, $justify: center, $align: center) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

// Grid
@mixin grid($columns: 1fr, $rows: auto, $gap: 20px) {
  display: grid;
  grid-template-columns: $columns;
  grid-template-rows: $rows;
  gap: $gap;
}

// Position absolute
@mixin absolute($top: auto, $right: auto, $bottom: auto, $left: auto) {
  position: absolute;
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
}

// Center absolutely
@mixin center-absolute {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Pseudo element
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

// Responsive font size
@mixin responsive-font(
  $min-size: 14px,
  $max-size: 18px,
  $min-width: 320px,
  $max-width: 1200px
) {
  font-size: calc(
    #{$min-size} + #{strip-unit($max-size - $min-size)} *
      ((100vw - #{$min-width}) / #{strip-unit($max-width - $min-width)})
  );

  @media (max-width: $min-width) {
    font-size: $min-size;
  }

  @media (min-width: $max-width) {
    font-size: $max-size;
  }
}

// Remove unit
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

// Truncate text with ellipsis
@mixin truncate($lines: 1) {
  @if $lines == 1 {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  } @else {
    display: -webkit-box;
    -webkit-line-clamp: $lines;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
}

// Glass effect
@mixin glass-effect($opacity: 0.2, $blur: 10px) {
  background: rgba(255, 255, 255, $opacity);
  backdrop-filter: blur($blur);
  -webkit-backdrop-filter: blur($blur);
}

// Box shadow
@mixin shadow($level: 1) {
  @if $level == 1 {
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
  } @else if $level == 2 {
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
  } @else if $level == 3 {
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
  } @else if $level == 4 {
    box-shadow: 0 15px 35px rgba(0, 0, 0, 0.2);
  }
}

// Media queries
@mixin responsive($breakpoint) {
  @if $breakpoint == sm {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
  } @else if $breakpoint == md {
    @media (max-width: $breakpoint-md) {
      @content;
    }
  } @else if $breakpoint == lg {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
  }
}
